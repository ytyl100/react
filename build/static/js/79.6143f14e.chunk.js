(this["webpackJsonpxiahe-react"] = this["webpackJsonpxiahe-react"] || []).push([[79], { 1132: function (e, a, t) { "use strict"; t.r(a); var l = t(0), s = t.n(l), r = t(173), n = t(174), c = t(193), m = t(169), i = t(131), o = t(24), p = t(1076); class d extends l.Component { constructor(e) { super(e), this.handleAcceptedFiles = e => { var a = e; this.props.showPreview && (e.map(e => Object.assign(e, { preview: "image" === e.type.split("/")[0] ? URL.createObjectURL(e) : null, formattedSize: this.formatBytes(e.size) })), (a = this.state.selectedFiles).push(...e), this.setState({ selectedFiles: a })), this.props.onFileUpload && this.props.onFileUpload(a) }, this.formatBytes = (e, a) => { if (0 === e) return "0 Bytes"; const t = a < 0 ? 0 : a, l = Math.floor(Math.log(e) / Math.log(1024)); return parseFloat((e / Math.pow(1024, l)).toFixed(t)) + " " + ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"][l] }, this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this), this.state = { selectedFiles: [] } } render() { return s.a.createElement(s.a.Fragment, null, s.a.createElement(p.a, Object.assign({ onDrop: e => this.handleAcceptedFiles(e) }, this.props), e => { let { getRootProps: a, getInputProps: t } = e; return s.a.createElement("div", { className: "dropzone text-center" }, s.a.createElement("div", Object.assign({ className: "dz-message py-5 needsclick" }, a()), s.a.createElement("input", t()), s.a.createElement("i", { className: "h1 text-muted uil-cloud-upload" }), s.a.createElement("h3", null, "Drop files here or click to upload."), s.a.createElement("span", { className: "text-muted font-13" }, "(This is just a demo dropzone. Selected files are ", s.a.createElement("strong", null, "not"), " actually uploaded.)"))) }), this.props.showPreview && s.a.createElement("div", { className: "dropzone-previews mt-3", id: "file-previews" }, this.state.selectedFiles.map((e, a) => s.a.createElement(c.a, { className: "mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete", key: a + "-file" }, s.a.createElement("div", { className: "p-2" }, s.a.createElement(r.a, { className: "align-items-center" }, e.preview && s.a.createElement(n.a, { className: "col-auto" }, s.a.createElement("img", { "data-dz-thumbnail": "", className: "avatar-sm rounded bg-light", alt: e.name, src: e.preview })), !e.preview && s.a.createElement(n.a, { className: "col-auto" }, s.a.createElement("div", { className: "avatar-sm" }, s.a.createElement("span", { className: "avatar-title bg-primary rounded" }, e.type.split("/")[0]))), s.a.createElement(n.a, { className: "pl-0" }, s.a.createElement(o.b, { to: "#", className: "text-muted font-weight-bold" }, e.name), s.a.createElement("p", { className: "mb-0" }, s.a.createElement("strong", null, e.formattedSize))))))))) } } d.defaultProps = { showPreview: !0 }; var u = d; a.default = () => s.a.createElement(s.a.Fragment, null, s.a.createElement(r.a, { className: "page-title" }, s.a.createElement(n.a, { md: 12 }, s.a.createElement(i.a, { breadCrumbItems: [{ label: "Forms", path: "/forms/upload" }, { label: "File Upload", path: "/forms/upload", active: !0 }], title: "File Upload" }))), s.a.createElement(r.a, null, s.a.createElement(n.a, null, s.a.createElement(c.a, null, s.a.createElement(m.a, null, s.a.createElement("h4", { className: "header-title mt-0 mb-1" }, "Dropzone File Upload"), s.a.createElement("p", { className: "sub-header" }, "DropzoneJS is an open source library that provides drag and drop file uploads with image previews."), s.a.createElement(u, { onFileUpload: e => { console.log(e) } })))))) }, 131: function (e, a, t) { "use strict"; var l = t(0), s = t.n(l), r = t(24), n = t(203), c = t(204); a.a = e => { const a = e.title || "", t = e.breadCrumbItems || ""; return s.a.createElement(s.a.Fragment, null, s.a.createElement(n.a, { className: "float-right mt-1 font-size-14" }, s.a.createElement(c.a, null, s.a.createElement(r.b, { to: "/" }, "xiahe")), t.map((e, a) => e.active ? s.a.createElement(c.a, { active: !0, key: a }, e.label) : s.a.createElement(c.a, { key: a }, s.a.createElement(r.b, { to: e.path }, e.label)))), s.a.createElement("h4", { className: "mb-1 mt-0" }, a)) } } }]);
//# sourceMappingURL=79.6143f14e.chunk.js.map