(this["webpackJsonpxiahe-react"] = this["webpackJsonpxiahe-react"] || []).push([[15], { 958: function (e, t, r) { "use strict"; var n = r(0), a = r.n(n), i = r(4), l = r.n(i); function o() { return (o = Object.assign || function (e) { for (var t = 1; t < arguments.length; t++) { var r = arguments[t]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]) } return e }).apply(this, arguments) } function s(e, t) { if (null == e) return {}; var r, n, a = function (e, t) { if (null == e) return {}; var r, n, a = {}, i = Object.keys(e); for (n = 0; n < i.length; n++)r = i[n], t.indexOf(r) >= 0 || (a[r] = e[r]); return a }(e, t); if (Object.getOwnPropertySymbols) { var i = Object.getOwnPropertySymbols(e); for (n = 0; n < i.length; n++)r = i[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (a[r] = e[r]) } return a } var c = Object(n.forwardRef)((function (e, t) { var r = e.color, n = void 0 === r ? "currentColor" : r, i = e.size, l = void 0 === i ? 24 : i, c = s(e, ["color", "size"]); return a.a.createElement("svg", o({ ref: t, xmlns: "http://www.w3.org/2000/svg", width: l, height: l, viewBox: "0 0 24 24", fill: "none", stroke: n, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }, c), a.a.createElement("circle", { cx: "12", cy: "12", r: "10" }), a.a.createElement("line", { x1: "15", y1: "9", x2: "9", y2: "15" }), a.a.createElement("line", { x1: "9", y1: "9", x2: "15", y2: "15" })) })); c.propTypes = { color: l.a.string, size: l.a.oneOfType([l.a.string, l.a.number]) }, c.displayName = "XCircle", t.a = c }, 989: function (e, t, r) { "use strict"; r.r(t); var n = r(0), a = r.n(n), i = r(25), l = r(24), o = r(843), s = r.n(o), c = (r(844), r(958)); class h extends n.Component { constructor(e) { super(e), this.componentDidMount = () => { document.addEventListener("mousedown", this.handleOtherClick, !1) }, this.componentWillUnmount = () => { document.removeEventListener("mousedown", this.handleOtherClick, !1) }, this.handleClose = e => { e.preventDefault(), this.hide() }, this.handleOtherClick = e => { this.rightBarNodeRef.contains(e.target) || this.hide() }, this.handleClose = this.handleClose.bind(this), this.state = {} } hide() { document.body.classList.remove("right-bar-enabled") } render() { const e = this.props.title, t = this.props.children || null; return a.a.createElement(a.a.Fragment, null, a.a.createElement("div", { className: "right-bar", ref: e => this.rightBarNodeRef = e }, a.a.createElement("div", { className: "rightbar-title" }, a.a.createElement(l.b, { to: "#", className: "right-bar-toggle float-right", onClick: this.handleClose }, a.a.createElement(c.a, null)), a.a.createElement("h5", { className: "m-0" }, e)), a.a.createElement(s.a, null, t)), a.a.createElement("div", { className: "rightbar-overlay" })) } } h.defaultProps = { title: "Right Sidebar" }, t.default = Object(i.b)()(h) } }]);
//# sourceMappingURL=15.51179846.chunk.js.map