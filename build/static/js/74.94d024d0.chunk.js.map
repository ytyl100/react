{
    "version": 3,
    "sources": [
        "pages/ecommerce/StoreItems.js",
        "components/PageTitle.js",
        "../node_modules/reactstrap/es/CardBody.js"
    ],
    "names": [
        "records",
        "id",
        "vender",
        "intro",
        "address",
        "name",
        "image",
        "phone",
        "columns",
        "dataField",
        "text",
        "headerStyle",
        "width",
        "style",
        "sort",
        "formatter",
        "cell",
        "React",
        "createElement",
        "src",
        "className",
        "height",
        "alt",
        "defaultSorted",
        "order",
        "sizePerPageRenderer",
        "_ref",
        "options",
        "currSizePerPage",
        "onSizePerPageChange",
        "Fragment",
        "Input",
        "type",
        "defaultValue",
        "onChange",
        "e",
        "target",
        "value",
        "map",
        "option",
        "idx",
        "key",
        "StoreItems",
        "Component",
        "constructor",
        "props",
        "super",
        "componentDidMount",
        "path",
        "this",
        "history",
        "console",
        "log",
        "setState",
        "storeData",
        "handleAdd",
        "push",
        "handleEditItem",
        "concat",
        "handleDelItem",
        "handleRowSelect",
        "row",
        "isSelected",
        "selectedRows",
        "state",
        "selected",
        "filter",
        "selectedId",
        "handleBatchDelete",
        "updatedData",
        "includes",
        "slice",
        "render",
        "SearchBar",
        "Search",
        "ExportCSVButton",
        "CSVExport",
        "selectRow",
        "mode",
        "clickToSelect",
        "backgroundColor",
        "color",
        "onSelect",
        "expandRow",
        "renderer",
        "Card",
        "CardBody",
        "float",
        "onClick",
        "class",
        "data-toggle",
        "data-target",
        "showExpandColumn",
        "onlyOneExpanding",
        "expandHeaderColumnRenderer",
        "_ref2",
        "isAnyExpands",
        "expandColumnRenderer",
        "_ref3",
        "expanded",
        "Row",
        "Col",
        "md",
        "PageTitle",
        "breadCrumbItems",
        "label",
        "active",
        "title",
        "xl",
        "ToolkitProvider",
        "bootstrap4",
        "keyField",
        "data",
        "search",
        "exportCSV",
        "onlyExportFiltered",
        "exportAll",
        "searchProps",
        "ButtonGroup",
        "Button",
        "UncontrolledTooltip",
        "placement",
        "Object",
        "assign",
        "csvProps",
        "BootstrapTable",
        "baseProps",
        "bordered",
        "pagination",
        "paginationFactory",
        "sizePerPage",
        "sizePerPageList",
        "length",
        "wrapperClasses",
        "items",
        "Breadcrumb",
        "BreadcrumbItem",
        "Link",
        "to",
        "item",
        "index",
        "_excluded",
        "propTypes",
        "tag",
        "tagPropType",
        "PropTypes",
        "string",
        "cssModule",
        "object",
        "innerRef",
        "oneOfType",
        "func",
        "Tag",
        "attributes",
        "_objectWithoutPropertiesLoose",
        "classes",
        "mapToCssModules",
        "classNames",
        "_extends",
        "ref",
        "defaultProps"
    ],
    "mappings": "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",
    "file": "static/js/74.94d024d0.chunk.js",
    "sourcesContent": [
        "/* eslint-disable react/style-prop-object */\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Input, Button, ButtonGroup, UncontrolledTooltip,\r\n} from 'reactstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst records = [\r\n    {\r\n        id: 1001,\r\n        vender: 'winmax sport',\r\n        intro: '华南地区最大专业体育用品品牌',\r\n        address: '广州市体育西路123号之一',\r\n        name: 'Burt',\r\n        image: 'https://reactstorefronts.com/static/img/brand/1.jpg',\r\n        phone: '+1 (823) 532-2427',\r\n    },\r\n    {\r\n        id: 1002,\r\n        vender: 'winmax sport',\r\n        intro: '华南地区最大专业体育用品品牌',\r\n        address: '广州市体育西路123号之一',\r\n        name: 'Long',\r\n        image: 'https://reactstorefronts.com/static/img/brand/1.jpg',\r\n        phone: '+1 (813) 583-2089',\r\n    },\r\n    {\r\n        id: 1003,\r\n        vender: 'winmax sport',\r\n        intro: '华南地区最大专业体育用品品牌',\r\n        address: '广州市体育西路123号之一',\r\n        name: 'Alvarado',\r\n        image: '../../assets/images/users/avatar-2.jpg',\r\n        phone: '+1 (975) 468-3875',\r\n    },\r\n    {\r\n        id: 1004,\r\n        vender: 'winmax sport',\r\n        intro: '华南地区最大专业体育用品品牌',\r\n        address: '广州市体育西路123号之一',\r\n        name: 'Lilia',\r\n        image: 'assets/images/users/avatar-2.jpg',\r\n        phone: '+1 (891) 537-3461',\r\n    },\r\n];\r\n\r\nconst imageFormatter = (cell) => (\r\n    <div>\r\n        <img src={cell} className=\"mr-2 rounded-circle\" height=\"36\" alt=\"\" />\r\n    </div>\r\n);\r\n\r\nconst columns = [\r\n    {\r\n        dataField: 'id',\r\n        text: '编号',\r\n        headerStyle: { width: '10%' },\r\n        style: { width: '10%' },\r\n        sort: true,\r\n    },\r\n    {\r\n        dataField: 'image',\r\n        text: '店铺图片展示9',\r\n        formatter: imageFormatter,\r\n        sort: false,\r\n    },\r\n    {\r\n        dataField: 'name',\r\n        text: '店铺名称',\r\n        sort: true,\r\n    },\r\n    {\r\n        dataField: 'phone',\r\n        text: '联系方式',\r\n        sort: false,\r\n    },\r\n    {\r\n        dataField: 'address',\r\n        text: '地点',\r\n        sort: true,\r\n    },\r\n];\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">显示</label>\r\n        <Input type=\"select\" name=\"select\" id=\"no-entries\" className=\"custom-select custom-select-sm d-inline col-1\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">条记录</label>\r\n    </React.Fragment>\r\n);\r\n\r\nclass StoreItems extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: [], // Array to store the selected row keys\r\n            storeData: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const path = this.props.history;\r\n        console.log('current store item location pathname:', path);\r\n        this.setState({\r\n            storeData: records,\r\n        })\r\n    }\r\n\r\n    handleAdd = () => {\r\n        //this.props.history.push(`/catalog/${parameterValue}`);\r\n        this.props.history.push(`/ecommerce/store/board`);\r\n    }\r\n\r\n    handleEditItem = (id) => {\r\n        this.props.history.push(`/ecommerce/store/board/${id}`);\r\n    };\r\n\r\n    handleDelItem = (id) => {\r\n\r\n    };\r\n\r\n    handleRowSelect = (row, isSelected) => {\r\n        const selectedRows = isSelected\r\n            ? [...this.state.selected, row.id]\r\n            : this.state.selected.filter((selectedId) => selectedId !== row.id);\r\n        this.setState({ selected: selectedRows });\r\n    };\r\n\r\n    handleBatchDelete = () => {\r\n        const updatedData = records.filter((row) => !this.state.selected.includes(row.id));\r\n        const remainData = records.filter((row) => this.state.selected.slice(row.id));\r\n\r\n        this.setState({ selected: [] }); // Clear selected rows\r\n        this.setState({ storeData: updatedData }); // Clear selected rows\r\n        console.log('update data:', updatedData);\r\n        console.log('remain data:', this.state.storeData);\r\n        // Do something with the updated data (e.g., update the data source, show a confirmation message)\r\n    };\r\n\r\n    render() {\r\n\r\n        const { SearchBar } = Search;\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n        const selectRow = {\r\n            mode: 'checkbox',\r\n            clickToSelect: true,\r\n            style: { backgroundColor: '#727cf5', color: '#fff' },\r\n            selected: this.state.selected,\r\n            onSelect: this.handleRowSelect,\r\n        };\r\n\r\n        const expandRow = {\r\n            renderer: row => (\r\n                <Card >\r\n                    <CardBody style={{ backgroundColor: \"#f7f7f7\" }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-2 col-md-3\">\r\n                                <div className=\"mt-4\">\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-1 col-md-3\">\r\n                                <div className=\"mt-4\">\r\n                                    <p className=\"mb-2\"><i className=\"uil-calender text-danger\"></i> 产品类目</p>\r\n                                    <h5 className=\"font-size-16\">0</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-1 col-md-3\">\r\n                                <div className=\"mt-4\">\r\n                                    <p className=\"mb-2\"><i className=\"uil-calendar-slash text-danger\"></i> 产品数量</p>\r\n                                    <h5 className=\"font-size-16\">159</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-1 col-md-3\">\r\n                                <div className=\"mt-4\">\r\n                                    <p className=\"mb-2\"><i className=\"uil-dollar-alt text-danger\"></i> 订单总额</p>\r\n                                    <h5 className=\"font-size-16\">$1325</h5>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-1 col-md-3\">\r\n                                <div className=\"mt-4\">\r\n                                    <p className=\"mb-2\"><i className=\"uil-user text-danger\"></i> 客户数量</p>\r\n                                    <h5 className=\"font-size-16\">223</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6\">\r\n                                <div className=\"mt-4\" style={{ float: \"right\" }}>\r\n                                    <span className=\"dtr-data\">\r\n                                        <button type=\"button\" onClick={() => { this.handleEditItem(row.id); }} class=\"btn btn-primary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">更新资料</button>\r\n                                        <button type=\"button\" onClick={() => { this.handleDelItem(row.id); }} class=\"btn btn-secondary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">删除商铺</button>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            ),\r\n            showExpandColumn: true,\r\n            onlyOneExpanding: true,\r\n            expandHeaderColumnRenderer: ({ isAnyExpands }) => {\r\n                return isAnyExpands ? <i className='uil uil-lock-open-alt'></i> : <i className='uil uil-padlock'></i>;\r\n            },\r\n            expandColumnRenderer: ({ expanded }) => {\r\n                return expanded ? <i className='uil uil-lock-open-alt'></i> : <i className='uil uil-padlock'></i>;\r\n            },\r\n        };\r\n\r\n        return <React.Fragment>\r\n            <Row className=\"page-title\">\r\n                <Col md={12}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Apps', path: '/apps/tasks/list' },\r\n                            { label: 'Tasks', path: '/apps/tasks/list', active: true },\r\n                        ]}\r\n                        title={'电商店铺管理'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* filter panel */}\r\n            <Row>\r\n                <Col xl={12}>\r\n\r\n                    <Card>\r\n                        <CardBody>\r\n                            <p className=\"sub-header\">\r\n                                店铺管理属于电商商家的分支机构，拥有各自独立的库存与产品管理，也可以分配各自的产品类目；\r\n                            </p>\r\n\r\n                            <ToolkitProvider\r\n                                bootstrap4\r\n                                keyField=\"id\"\r\n                                data={this.state.storeData}\r\n                                columns={columns}\r\n                                search\r\n                                exportCSV={{ onlyExportFiltered: true, exportAll: false }}>\r\n                                {props => (\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col xl={2}>\r\n                                                <SearchBar {...props.searchProps} />\r\n                                            </Col>\r\n                                            <Col xl={2} className=\"text-left\">\r\n                                                <ButtonGroup className=\"mr-1\">\r\n                                                    <Button id=\"archive\" color=\"light\">\r\n                                                        <i className=\"uil uil-archive-alt\"></i>归档\r\n                                                    </Button>\r\n                                                    <UncontrolledTooltip placement=\"top\" target=\"archive\">归档</UncontrolledTooltip>\r\n                                                    <Button id=\"spam\" color=\"light\">\r\n                                                        <i className=\"uil uil-exclamation-octagon\"></i>待处理\r\n                                                    </Button>\r\n                                                    <UncontrolledTooltip placement=\"top\" target=\"spam\">标记待处理</UncontrolledTooltip>\r\n                                                    <Button id=\"delete\" color=\"light\" onClick={() => { this.handleBatchDelete(); }}>\r\n                                                        <i className=\"uil uil-trash-alt\"></i>删除\r\n                                                    </Button>\r\n                                                    <UncontrolledTooltip placement=\"top\" target=\"delete\">批量删除</UncontrolledTooltip>\r\n                                                </ButtonGroup>\r\n                                            </Col>\r\n                                            <Col xl={8} className=\"text-right\">\r\n                                                <div className=\"btn-group mb-2\">\r\n                                                    <Button className=\"btn btn-primary\" onClick={() => { this.handleAdd(); }}>\r\n                                                        新增商铺\r\n                                                    </Button>\r\n                                                    <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n                                                        导出 CSV\r\n                                                    </ExportCSVButton >\r\n                                                    <Button className=\"btn btn-secondary\">\r\n                                                        导入\r\n                                                    </Button>\r\n                                                    <Button className=\"btn btn-secondary\">\r\n                                                        打印\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <BootstrapTable\r\n                                            {...props.baseProps}\r\n                                            bordered={false}\r\n                                            data={records}\r\n                                            defaultSorted={defaultSorted}\r\n                                            pagination={paginationFactory({ sizePerPage: 5, sizePerPageRenderer: sizePerPageRenderer, sizePerPageList: [{ text: '5', value: 5, }, { text: '10', value: 10 }, { text: '25', value: 25 }, { text: 'All', value: records.length }] })}\r\n                                            expandRow={expandRow}\r\n                                            selectRow={selectRow}\r\n                                            wrapperClasses=\"table-responsive\"\r\n                                        />\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </ToolkitProvider>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\n\r\nexport default StoreItems;",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">xiahe</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;",
        "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"
    ],
    "sourceRoot": ""
}
