{
    "version": 3,
    "sources": [
        "pages/forms/Basic.js",
        "components/PageTitle.js"
    ],
    "names": [
        "BasicInputElements",
        "React",
        "createElement",
        "Card",
        "CardBody",
        "className",
        "Row",
        "Col",
        "lg",
        "Form",
        "FormGroup",
        "Label",
        "for",
        "Input",
        "type",
        "name",
        "id",
        "placeholder",
        "defaultValue",
        "rows",
        "readOnly",
        "disabled",
        "plaintext",
        "FormText",
        "multiple",
        "SelectInput",
        "Fragment",
        "Switches",
        "CustomInput",
        "label",
        "htmlFor",
        "CustomCheckboxes",
        "InlineCustomCheckboxes",
        "inline",
        "CustomRadios",
        "DefaultForm",
        "Button",
        "color",
        "HorizontalForm",
        "row",
        "sm",
        "InlineForm",
        "BasicForms",
        "md",
        "PageTitle",
        "breadCrumbItems",
        "path",
        "active",
        "title",
        "props",
        "items",
        "Breadcrumb",
        "BreadcrumbItem",
        "Link",
        "to",
        "map",
        "item",
        "index",
        "key"
    ],
    "mappings": "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",
    "file": "static/js/78.4762ffb7.chunk.js",
    "sourcesContent": [
        "import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    CustomInput,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Button,\n} from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst BasicInputElements = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0\">Input Types</h4>\n                <p className=\"text-muted\">\n                    Most common form control, text-based input fields. Includes support for all HTML5 types:{' '}\n                    <code>text</code>, <code>password</code>, <code>datetime</code>, <code>datetime-local</code>,{' '}\n                    <code>date</code>, <code>month</code>, <code>time</code>, <code>week</code>, <code>number</code>,{' '}\n                    <code>email</code>, <code>url</code>, <code>search</code>, <code>tel</code>, and <code>color</code>.\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"text\">Text</Label>\n                                <Input type=\"text\" name=\"text\" id=\"text\" placeholder=\"with a placeholder\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleEmail\">Email</Label>\n                                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"examplePassword\"\n                                    placeholder=\"password placeholder\"\n                                    defaultValue=\"12345\"\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleText\">Text Area</Label>\n                                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" rows=\"5\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"text1\">Read only</Label>\n                                <Input type=\"text\" name=\"text\" id=\"text1\" placeholder=\"Readonly value\" readOnly />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"text2\">Disabled</Label>\n                                <Input type=\"text\" name=\"text\" id=\"text2\" placeholder=\"Disabled\" disabled />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleEmail1\">Static control</Label>\n                                <Input plaintext defaultValue=\"email@example.com\" readOnly />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"text3\">Helping text</Label>\n                                <Input type=\"text\" name=\"text\" id=\"text3\" placeholder=\"Helping text\" />\n                                <FormText>\n                                    A block of help text that breaks onto a new line and may extend beyond one line.\n                                </FormText>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n\n                    <Col lg={6}>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Select</Label>\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n                                <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleFile\">Default file input</Label>\n                                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleDate\">Date</Label>\n                                <Input type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleMonth\">Month</Label>\n                                <Input type=\"month\" name=\"month\" id=\"exampleMonth\" placeholder=\"date month\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleTime\">Time</Label>\n                                <Input type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"date Time\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleWeek\">Week</Label>\n                                <Input type=\"week\" name=\"week\" id=\"exampleWeek\" placeholder=\"date week\" />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleNumber\">Number</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"number\"\n                                    id=\"exampleNumber\"\n                                    placeholder=\"number placeholder\"\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleColor\">Color</Label>\n                                <Input\n                                    type=\"color\"\n                                    name=\"color\"\n                                    id=\"exampleColor\"\n                                    placeholder=\"color placeholder\"\n                                    defaultValue=\"#727cf5\"\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"exampleRange\">Range</Label>\n                                <input\n                                    className=\"custom-range\"\n                                    type=\"range\"\n                                    name=\"range\"\n                                    id=\"exampleRange\"\n                                    placeholder=\"range placeholder\"\n                                />\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst SelectInput = () => {\n    return (\n        <React.Fragment>\n            <h4 className=\"header-title mt-0\">Select menu</h4>\n            <p className=\"text-muted\">\n                Custom <code>&lt;select&gt;</code> menus need only a custom class, <code>.custom-select</code> to\n                trigger the custom styles.\n            </p>\n\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect2\" className=\"custom-select mt-3\">\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n            </Input>\n\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect4\" className=\"custom-select custom-select-lg mt-2\">\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n            </Input>\n\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect4\" className=\"custom-select custom-select-sm mt-2\">\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n            </Input>\n        </React.Fragment>\n    );\n};\n\nconst Switches = () => {\n    return (\n        <React.Fragment>\n            <h4 className=\"header-title mt-4\">Switches</h4>\n            <p className=\"text-muted\">\n                A switch has the markup of a custom checkbox but uses the <code>.custom-switch</code> class to render a\n                toggle switch. Switches also support the <code>disabled</code> attribute.\n            </p>\n\n            <div>\n                <CustomInput\n                    type=\"switch\"\n                    id=\"exampleCustomSwitch\"\n                    name=\"customSwitch\"\n                    label=\"Turn on this custom switch\"\n                />\n                <CustomInput\n                    type=\"switch\"\n                    id=\"exampleCustomSwitch4\"\n                    label=\"Can't click this label to turn on!\"\n                    htmlFor=\"exampleCustomSwitch4_X\"\n                    disabled\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CustomCheckboxes = () => {\n    return (\n        <FormGroup>\n            <Label for=\"exampleCheckbox\">Checkboxes</Label>\n            <div>\n                <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\" label=\"Check this custom checkbox\" />\n                <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\" label=\"But not this disabled one\" disabled />\n            </div>\n        </FormGroup>\n    );\n};\n\nconst InlineCustomCheckboxes = () => {\n    return (\n        <FormGroup>\n            <Label for=\"exampleCheckbox\">Inline</Label>\n            <div>\n                <CustomInput type=\"checkbox\" id=\"exampleCustomInline\" label=\"An inline custom input\" inline />\n                <CustomInput type=\"checkbox\" id=\"exampleCustomInline2\" label=\"and another one\" inline />\n            </div>\n        </FormGroup>\n    );\n};\n\nconst CustomRadios = () => {\n    return (\n        <FormGroup>\n            <Label for=\"exampleCheckbox\">Radios</Label>\n            <div>\n                <CustomInput type=\"radio\" id=\"exampleCustomRadio\" name=\"customRadio\" label=\"Select this custom radio\" />\n                <CustomInput type=\"radio\" id=\"exampleCustomRadio3\" label=\"But not this disabled one\" disabled />\n            </div>\n        </FormGroup>\n    );\n};\n\n\nconst DefaultForm = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0\">Basic Example</h4>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"exampleEmail2\">Email</Label>\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail2\" placeholder=\"Enter your email\" />\n                        <FormText>We'll never share your email with anyone else.</FormText>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"examplePassword2\">Password</Label>\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"examplePassword2\"\n                            placeholder=\"password placeholder\"\n                            defaultValue=\"12345\"\n                        />\n                    </FormGroup>\n\n                    <Button color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HorizontalForm = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0\">Horizontal Form</h4>\n                <Form>\n                    <FormGroup row>\n                        <Label for=\"exampleEmail3\" sm={3}>\n                            Email\n                        </Label>\n                        <Col sm={9}>\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail3\" placeholder=\"Enter your email\" />\n                            <FormText>We'll never share your email with anyone else.</FormText>\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label for=\"examplePassword3\" sm={3}>\n                            Password\n                        </Label>\n                        <Col sm={9}>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword3\"\n                                placeholder=\"password placeholder\"\n                                defaultValue=\"12345\"\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label for=\"examplePassword4\" sm={3}>\n                            Re-Password\n                        </Label>\n                        <Col sm={9}>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword4\"\n                                placeholder=\"password placeholder\"\n                                defaultValue=\"12345\"\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <Button color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst InlineForm = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0\">Inline Form Example</h4>\n                <Form inline>\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Label for=\"exampleEmail4\" className=\"mr-sm-2\">\n                            Email\n                        </Label>\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail4\" placeholder=\"Enter your email\" />\n                    </FormGroup>\n\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                        <Label for=\"examplePassword5\" className=\"mr-sm-2\">\n                            Password\n                        </Label>\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"examplePassword5\"\n                            placeholder=\"password placeholder\"\n                            defaultValue=\"12345\"\n                        />\n                    </FormGroup>\n\n                    <Button color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst BasicForms = () => {\n    return (\n        <React.Fragment>\n            <Row className=\"page-title\">\n                <Col md={12}>\n                    <PageTitle\n                        breadCrumbItems={[\n                            { label: 'Forms', path: '/forms/basic' },\n                            { label: 'Form Elements', path: '/forms/basic', active: true },\n                        ]}\n                        title={'Form Elements'}\n                    />\n                </Col></Row>\n\n            <Row>\n                <Col>\n                    <BasicInputElements />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <SelectInput />\n                            <Switches />\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <h4 className=\"header-title mt-5 mt-sm-0\">Checkboxes and radios</h4>\n                            <div className=\"mt-3\">\n                                <CustomCheckboxes />\n                                <CustomRadios />\n                                <InlineCustomCheckboxes />\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <DefaultForm />\n                </Col>\n\n                <Col lg={6}>\n                    <HorizontalForm />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InlineForm />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\nexport default BasicForms;\n",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">xiahe</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;"
    ],
    "sourceRoot": ""
}
