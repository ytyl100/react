{
    "version": 3,
    "sources": [
        "pages/ecommerce/AttributeItems.js",
        "components/PageTitle.js",
        "pages/ecommerce/utilities/ProductNestedItems.js"
    ],
    "names": [
        "AttributeItems",
        "Component",
        "constructor",
        "props",
        "super",
        "onClose",
        "this",
        "setState",
        "drawerOpen",
        "showDrawer",
        "handleAdd",
        "history",
        "push",
        "handleEditItem",
        "id",
        "concat",
        "handleDelItem",
        "state",
        "selected",
        "selectedRows",
        "render",
        "columns",
        "title",
        "dataIndex",
        "key",
        "text",
        "record",
        "React",
        "createElement",
        "Space",
        "size",
        "className",
        "style",
        "float",
        "type",
        "onClick",
        "class",
        "data-toggle",
        "data-target",
        "childColumns",
        "Badge",
        "status",
        "Fragment",
        "Row",
        "Col",
        "md",
        "PageTitle",
        "breadCrumbItems",
        "label",
        "path",
        "active",
        "xl",
        "Card",
        "CardBody",
        "align",
        "Button",
        "marginBottom",
        "ProductNestedItems",
        "rootdata",
        "name",
        "SKU",
        "catalog",
        "intro",
        "children",
        "value",
        "price_setting",
        "quantity_setting",
        "Drawer",
        "placement",
        "width",
        "open",
        "extra",
        "withRouter",
        "items",
        "Breadcrumb",
        "BreadcrumbItem",
        "Link",
        "to",
        "map",
        "item",
        "index",
        "_ref",
        "selectedRowKeys",
        "setSelectedRowKeys",
        "useState",
        "rowSelection",
        "onChange",
        "updateParent",
        "_ref2",
        "rest",
        "Table",
        "dataSource",
        "pagination",
        "expandable",
        "expandedRowRender",
        "currentdata",
        "filteredArray",
        "filter",
        "obj",
        "length",
        "console",
        "log",
        "rowKey",
        "indentSize"
    ],
    "mappings": "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",
    "file": "static/js/72.82e924a5.chunk.js",
    "sourcesContent": [
        "/* eslint-disable react/style-prop-object */\r\nimport React, { Component } from 'react';\r\nimport { Space, Badge, Drawer, } from 'antd';\r\nimport {\r\n    Row, Col, Card, CardBody, Button,\r\n} from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport ProductNestedItems from './utilities/ProductNestedItems';\r\n\r\nclass AttributeItems extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: [], // Array to store the selected row keys\r\n            selectedRows: [],\r\n            drawerOpen: false\r\n        };\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            drawerOpen: false\r\n        });\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            drawerOpen: true\r\n        });\r\n    }\r\n\r\n    handleAdd = () => {\r\n        //this.props.history.push(`/catalog/${parameterValue}`);\r\n        this.props.history.push(`/ecommerce/attributes/board`);\r\n    }\r\n\r\n    handleEditItem = (id) => {\r\n        this.props.history.push(`/ecommerce/attributes/board/${id}`);\r\n    };\r\n\r\n    handleDelItem = (id) => {\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                title: '属性标签',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '属性编号',\r\n                dataIndex: 'SKU',\r\n                key: 'SKU',\r\n            },\r\n            {\r\n                title: '属性类目',\r\n                dataIndex: 'catalog',\r\n                key: 'catalog',\r\n            },\r\n            {\r\n                title: '属性描述',\r\n                dataIndex: 'intro',\r\n                key: 'intro',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (text, record) => {\r\n                    return <div>\r\n                        <Space size=\"middle\">\r\n                            <div className=\"mt-4\" style={{ float: \"right\" }}>\r\n                                <span className=\"dtr-data\">\r\n                                    <button type=\"button\" onClick={() => { this.handleEditItem(record.key); }} class=\"btn btn-primary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">更新属性</button>\r\n                                    <button type=\"button\" onClick={() => { this.handleDelItem(record.key); }} class=\"btn btn-secondary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">删除属性</button>\r\n                                </span>\r\n                            </div>\r\n                        </Space>\r\n                    </div>\r\n                },\r\n            },\r\n        ];\r\n\r\n        const childColumns = [\r\n            {\r\n                title: '属性标识',\r\n                dataIndex: 'label',\r\n                key: 'label',\r\n            },\r\n            {\r\n                title: '属性内容',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n            },\r\n            {\r\n                title: '价格设置',\r\n                dataIndex: 'price_setting',\r\n                key: 'price_setting',\r\n            },\r\n            {\r\n                title: '库存设置',\r\n                dataIndex: 'quantity_setting',\r\n                key: 'quantity_setting',\r\n            },\r\n            {\r\n                title: '启动状态',\r\n                key: 'state',\r\n                render: (text, record) => <Badge status=\"success\" text=\"Finished\" />,\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                render: (text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <div className=\"mt-4\" style={{ float: \"right\" }}>\r\n                            <span className=\"dtr-data\">\r\n                                <button type=\"button\" onClick={this.showDrawer} class=\"btn btn-primary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">快速修改</button>\r\n\r\n                                <button type=\"button\" onClick={() => { this.handleDelItem(record.key); }} class=\"btn btn-secondary mr-2\" data-toggle=\"modal\" data-target=\"#bs-role-modal-xl\">删除属性</button>\r\n                            </span>\r\n                        </div>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const rootdata = [\r\n            {\r\n                key: 1,\r\n                name: '按照产品的尺寸',\r\n                SKU: 'iOS-size',\r\n                catalog: '电子消费品类',\r\n                intro: 'Screen-显示器65寸，大屏薄屏高品质',\r\n                children: [\r\n                    {\r\n                        key: 11,\r\n                        label: 'size',\r\n                        value: 'S',\r\n                        price_setting: 'system',\r\n                        quantity_setting: 'system',\r\n                    },\r\n                    {\r\n                        key: 12,\r\n                        label: 'size',\r\n                        value: 'M',\r\n                        price_setting: 'system',\r\n                        quantity_setting: 'skip',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                key: 2,\r\n                name: '按照产品的颜色属性',\r\n                SKU: 'iOS-color',\r\n                catalog: '电子消费品类',\r\n                intro: 'Screen-显示器65寸，大屏薄屏高品质',\r\n                children: [\r\n                    {\r\n                        key: 21,\r\n                        label: 'color',\r\n                        value: 'white',\r\n                        price_setting: 'system',\r\n                        quantity_setting: 'system',\r\n                    },\r\n                    {\r\n                        key: 22,\r\n                        label: 'color',\r\n                        value: 'black',\r\n                        price_setting: 'system',\r\n                        quantity_setting: 'system',\r\n                    },\r\n                ]\r\n            },\r\n        ];\r\n\r\n        return <React.Fragment>\r\n            <Row className=\"page-title\">\r\n                <Col md={12}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Apps', path: '/apps/tasks/list' },\r\n                            { label: 'Tasks', path: '/apps/tasks/list', active: true },\r\n                        ]}\r\n                        title={'属性管理列表'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* filter panel */}\r\n            <Row>\r\n                <Col xl={12}>\r\n\r\n                    <Card>\r\n                        <CardBody>\r\n                            <p className=\"sub-header\">\r\n                                供货商建立属性可以为产品增加定制的属性资料，供货商统一在属性列表中建立属性方便产品建立时选择特殊的属性。\r\n                            </p>\r\n                            <React.Fragment>\r\n                                <Row>\r\n                                    <Col xl={2}>\r\n                                        <Space align='left'>\r\n                                            <Button\r\n                                                onClick={() => { this.handleAdd(); }}\r\n                                                type=\"primary\"\r\n                                                style={{\r\n                                                    marginBottom: 16,\r\n                                                }}\r\n                                            >\r\n                                                添加产品\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </Col>\r\n                                    <Col xl={2} className=\"text-left\">\r\n\r\n                                    </Col>\r\n                                    <Col xl={8} className=\"text-right\">\r\n                                        <Space align='end'>\r\n                                            <div className=\"btn-group mb-2 text-right\">\r\n                                                <Button className=\"btn btn-primary\">\r\n                                                    导出 CSV\r\n                                                </Button >\r\n                                                <Button className=\"btn btn-primary btn btn-secondary\">\r\n                                                    导入\r\n                                                </Button>\r\n                                                <Button className=\"btn btn-primary btn btn-secondary\">\r\n                                                    打印\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Space>\r\n                                    </Col>\r\n                                </Row></React.Fragment>\r\n\r\n\r\n                            <ProductNestedItems columns={columns} childColumns={childColumns} rootdata={rootdata}></ProductNestedItems>\r\n                            <Drawer\r\n                                title=\"快速修改属性配置值\"\r\n                                placement='right'\r\n                                width={800}\r\n                                onClose={this.onClose}\r\n                                open={this.state.drawerOpen}\r\n                                extra={\r\n                                    <Space>\r\n                                        <Button onClick={this.onClose}>取消</Button>\r\n                                        <Button type=\"primary\" onClick={this.onClose}>\r\n                                            保存\r\n                                        </Button>\r\n                                    </Space>\r\n                                }\r\n                            >\r\n                                <p>Some contents...</p>\r\n                                <p>Some contents...</p>\r\n                                <p>Some contents...</p>\r\n                            </Drawer>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default withRouter(AttributeItems);",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">xiahe</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;",
        "import React, { useState } from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst ProductNestedItems = ({ columns, childColumns, rootdata }) => {\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    const onSelectChange = selectedRowKeys => {\r\n        setSelectedRowKeys(selectedRowKeys);\r\n    };\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n    };\r\n\r\n    const expandedRowRender = (record) => {\r\n\r\n        const copyParent = [...rootdata];\r\n        let currentdata = null;\r\n        const filteredArray = copyParent.filter((obj) => obj.key === record.key);\r\n\r\n        if (filteredArray.length > 0) {\r\n            currentdata = filteredArray[0].children;\r\n        } else {\r\n            console.log('No object found with the specified ID.');\r\n        }\r\n\r\n        return (\r\n            <Table\r\n                rowSelection={rowSelection}\r\n                columns={childColumns}\r\n                dataSource={currentdata}\r\n                pagination={false}\r\n                size=\"small\"\r\n                rowKey=\"key\"\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    //remove children node from parent json\r\n    const updateParent = rootdata.map(({ children, ...rest }) => rest);\r\n\r\n    return (\r\n        <Table\r\n            dataSource={updateParent}\r\n            columns={columns}\r\n            rowSelection={rowSelection}\r\n            pagination={true}\r\n            expandable={{\r\n                expandedRowRender,\r\n            }}\r\n            indentSize={30}\r\n            rowKey=\"key\"\r\n        >\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default ProductNestedItems;"
    ],
    "sourceRoot": ""
}
