import React, { useState } from 'react';
import { Media } from 'reactstrap';
import { CloseOutlined } from '@ant-design/icons';

import {
    AutoComplete,
    Button,
    Typography,
    Cascader,
    Switch,
    Form,
    Input,
    Select,
    Space, Card
} from 'antd';

const { Option } = Select;
const residences = [
    {
        value: 'zhejiang',
        label: 'Zhejiang',
        children: [
            {
                value: 'hangzhou',
                label: 'Hangzhou',
                children: [
                    {
                        value: 'xihu',
                        label: 'West Lake',
                    },
                ],
            },
        ],
    },
    {
        value: 'jiangsu',
        label: 'Jiangsu',
        children: [
            {
                value: 'nanjing',
                label: 'Nanjing',
                children: [
                    {
                        value: 'zhonghuamen',
                        label: 'Zhong Hua Men',
                    },
                ],
            },
        ],
    },
];
const formItemLayout = {
    labelCol: {
        xs: {
            span: 24,
        },
        sm: {
            span: 8,
        },
    },
    wrapperCol: {
        xs: {
            span: 24,
        },
        sm: {
            span: 16,
        },
    },
};
const tailFormItemLayout = {
    wrapperCol: {
        xs: {
            span: 24,
            offset: 0,
        },
        sm: {
            span: 16,
            offset: 8,
        },
    },
};
const AttributeBase = ({ onFinish }) => {
    const [form] = Form.useForm();

    const prefixSelector = (
        <Form.Item name="prefix" noStyle>
            <Select
                style={{
                    width: 70,
                }}
            >
                <Option value="86">+86</Option>
                <Option value="87">+87</Option>
            </Select>
        </Form.Item>
    );
    const suffixSelector = (
        <Form.Item name="suffix" noStyle>
            <Select
                style={{
                    width: 70,
                }}
            >
                <Option value="USD">$</Option>
                <Option value="CNY">¥</Option>
            </Select>
        </Form.Item>
    );
    const [autoCompleteResult, setAutoCompleteResult] = useState([]);
    const onWebsiteChange = (value) => {
        if (!value) {
            setAutoCompleteResult([]);
        } else {
            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));
        }
    };
    const websiteOptions = autoCompleteResult.map((website) => ({
        label: website,
        value: website,
    }));
    return (
        <Form
            {...formItemLayout}
            form={form}
            name="attribute"
            onFinish={onFinish}
            autoComplete="off"
            initialValues={{ items: [{}] }}
            labelCol={{
                span: 4,
            }}
            wrapperCol={{
                span: 18,
            }}
            scrollToFirstError
        >
            <Media className="mt-2 mb-2 p-3" style={{ backgroundColor: "#fff", fontSize: "15px" }}>
                <Media body >
                    <h6 className="mt-0 mb-2 header-title">产品属性资料的录入</h6>
                    <hr></hr>
                    <Form.Item label="启动属性" valuePropName="checked" className="mt-0 mb-0 p-2">
                        <Switch />
                    </Form.Item>
                    <Form.Item
                        name="storename"
                        label="属性名称"
                        tooltip="当前的属性是什么?"
                        rules={[
                            {
                                required: true,
                                message: '请输入属性',
                                whitespace: true,
                            },
                        ]}
                    >
                        <Input />
                    </Form.Item>
                    <Form.Item
                        name="intro"
                        label="品牌介绍"
                        rules={[
                            {
                                required: true,
                                message: '请输入品牌介绍',
                            },
                        ]}
                    >
                        <Input.TextArea showCount maxLength={100} />
                    </Form.Item>
                    <Form.List name="items"
                    >
                        {(fields, { add, remove }) => (
                            <div style={{ display: 'flex', flexDirection: 'column' }}>
                                {fields.map((field) => (
                                    <Card
                                        size="small"
                                        title={`属性 ${field.name + 1}`}
                                        key={field.key}
                                        style={{ padding: '5px' }}
                                        extra={
                                            <CloseOutlined
                                                onClick={() => {
                                                    remove(field.name);
                                                }}
                                            />
                                        }
                                    >
                                        <Form.Item label="属性名称" name={[field.name, 'name']}
                                            tooltip="当前的属性是什么?"
                                            rules={[
                                                {
                                                    required: true,
                                                    message: '请输入属性',
                                                    whitespace: true,
                                                },
                                            ]}
                                        >
                                            <Input />
                                        </Form.Item>

                                        {/* Nest Form.List */}
                                        <Form.Item label="属性值"
                                            tooltip="当前的属性是什么?"
                                            rules={[
                                                {
                                                    required: true,
                                                    message: '请输入属性值',
                                                    whitespace: true,
                                                },
                                            ]}>
                                            <Form.List name={[field.name, 'list']}>
                                                {(subFields, subOpt) => (
                                                    <div style={{ display: 'flex', flexDirection: 'column', padding: '5px', rowGap: 16 }}>
                                                        {subFields.map((subField) => (
                                                            <Space key={subField.key}>
                                                                <Form.Item noStyle name={[subField.name, 'first']}
                                                                    tooltip="当前的属性是什么?"
                                                                    rules={[
                                                                        {
                                                                            required: true,
                                                                            message: '请输入属性标签',
                                                                            whitespace: true,
                                                                        },
                                                                    ]}
                                                                >
                                                                    <Input placeholder="属性标签" />
                                                                </Form.Item>
                                                                <Form.Item noStyle name={[subField.name, 'second']}
                                                                    tooltip="当前的属性值是什么?"
                                                                    rules={[
                                                                        {
                                                                            required: true,
                                                                            message: '请输入属性值',
                                                                            whitespace: true,
                                                                        },
                                                                    ]}
                                                                >
                                                                    <Input placeholder="属性值" />
                                                                </Form.Item>
                                                                <CloseOutlined
                                                                    onClick={() => {
                                                                        subOpt.remove(subField.name);
                                                                    }}
                                                                />
                                                            </Space>
                                                        ))}
                                                        <Button type="dashed" onClick={() => subOpt.add()} block>
                                                            + 添加属性标签
                                                        </Button>
                                                    </div>
                                                )}
                                            </Form.List>
                                        </Form.Item>
                                    </Card>
                                ))}

                                <Button type="dashed" onClick={() => add()} block>
                                    + 添加属性
                                </Button>
                            </div>
                        )}
                    </Form.List>

                    {/* <Form.Item noStyle shouldUpdate>
                        {() => (
                            <Typography>
                                <pre>{JSON.stringify(form.getFieldsValue(), null, 2)}</pre>
                            </Typography>
                        )}
                    </Form.Item> */}

                    <Form.Item
                        name="vendor"
                        label="所属供货商"
                        rules={[
                            {
                                required: true,
                                message: '请选择你的供货商',
                            },
                        ]}
                    >
                        <Select placeholder="请选择供货商">
                            <Option value="winmax">winmax</Option>
                            <Option value="belle">belle</Option>
                            <Option value="other">Other</Option>
                        </Select>
                    </Form.Item>

                    <Form.Item {...tailFormItemLayout}>
                        <Button type="primary" htmlType="submit">
                            提交信息
                        </Button>
                    </Form.Item>
                </Media>
            </Media>
        </Form>
    );
};

export default AttributeBase;