/* eslint-disable react/style-prop-object */
import React, { Component } from 'react';
import {
    Row, Col, Card, CardBody, Input, Button, ButtonGroup, UncontrolledTooltip, Media
} from 'reactstrap';
//import { Table, button, Button, Space, Tooltip } from 'antd';
import BootstrapTable from 'react-bootstrap-table-next';
import ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';
import paginationFactory from 'react-bootstrap-table2-paginator';
import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';

import PageTitle from '../../components/PageTitle';

const records = [
    {
        id: 1,
        age: 32,
        name: 'Burt',
        image: 'https://reactstorefronts.com/static/img/brand/1.jpg',
        phone: '+1 (823) 532-2427',
    },
    {
        id: 2,
        age: 23,
        name: 'Long',
        image: 'https://reactstorefronts.com/static/img/brand/1.jpg',
        phone: '+1 (813) 583-2089',
    },
    {
        id: 3,
        age: 31,
        name: 'Alvarado',
        image: '../../assets/images/users/avatar-2.jpg',
        phone: '+1 (975) 468-3875',
    },
    {
        id: 4,
        age: 24,
        name: 'Lilia',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (891) 537-3461',
    },
    {
        id: 5,
        age: 25,
        name: 'Amanda',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (916) 522-3747',
    },
    {
        id: 6,
        age: 20,
        name: 'Alexandra',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (876) 492-3181',
    },
    {
        id: 7,
        age: 27,
        name: 'Diana',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (977) 417-3038',
    },
    {
        id: 8,
        age: 26,
        name: 'Goodman',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (930) 545-2289',
    },
    {
        id: 9,
        age: 26,
        name: 'Edith',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (854) 506-3468',
    },
    {
        id: 10,
        age: 29,
        name: 'Juana',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (872) 560-2324',
    },
    {
        id: 11,
        age: 21,
        name: 'Fitzgerald',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (813) 573-2507',
    },
    {
        id: 12,
        age: 38,
        name: 'Madden',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (935) 534-3876',
    },
    {
        id: 13,
        age: 40,
        name: 'Jewell',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (886) 516-3262',
    },
    {
        id: 14,
        age: 32,
        name: 'Kerr',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (807) 561-3077',
    },
    {
        id: 15,
        age: 20,
        name: 'Washington',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (948) 458-3517',
    },
    {
        id: 16,
        age: 20,
        name: 'Audrey',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (900) 592-3841',
    },
    {
        id: 17,
        age: 39,
        name: 'Allison',
        image: 'assets/images/users/avatar-2.jpg',
        phone: '+1 (998) 478-3810',
    },
];

const imageFormatter = (cell) => (
    <div>
        <Media className="mt-3 p-1" width="300px">
            <img src={cell} className="mr-2 rounded-circle" height="36" alt="" />
            <Media body>
                <h5 className="mt-0 mb-0 font-size-14">
                    shinne cooker
                </h5>
                <p className="mt-1 mb-0 text-muted">Our new project brand new shinne cooker</p>
            </Media>
        </Media>
    </div>
    // <div><img src={cell} alt="brandimgs" style={{ width: '100px' }} /><hr></hr>123</div>
);

const columns = [
    {
        dataField: 'image',
        text: 'brand image',
        formatter: imageFormatter,
        headerStyle: { width: '35%' },
        style: { width: '35%' },
        sort: false,
    },
    {
        dataField: 'id',
        text: 'ID',
        sort: true,
    },
    {
        dataField: 'name',
        text: 'Name',
        sort: true,
    },
    {
        dataField: 'phone',
        text: 'Phone Number',
        sort: false,
    },
    {
        dataField: 'age',
        text: 'Age',
        sort: true,
    },
];

const defaultSorted = [
    {
        dataField: 'id',
        order: 'asc',
    },
];

const sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (
    <React.Fragment>
        <label className="d-inline mr-1">Show</label>
        <Input type="select" name="select" id="no-entries" className="custom-select custom-select-sm d-inline col-1"
            defaultValue={currSizePerPage}
            onChange={(e) => onSizePerPageChange(e.target.value)}>
            {options.map((option, idx) => {
                return <option key={idx}>{option.text}</option>
            })}
        </Input>
        <label className="d-inline ml-1">entries</label>
    </React.Fragment>
);

class Branditems extends Component {
    // eslint-disable-next-line no-useless-constructor
    constructor(props) {
        super(props);
    }

    render() {

        const { SearchBar } = Search;
        const { ExportCSVButton } = CSVExport;


        const selectRow = {
            mode: 'checkbox',
            clickToSelect: true,
            style: { backgroundColor: '#727cf5', color: '#fff' },
        };

        const expandRow = {
            renderer: row => (
                <div>
                    <p className="mt-2">{`Hello ${row.name}`}</p>
                    <p>You can render anything here</p>
                    <ul data-dtr-index="16" class="dtr-details">
                        <li data-dtr-index="5" data-dt-row="16" data-dt-column="5">
                            <span class="dtr-title">部门操作</span>
                            <span class="dtr-data">
                                <button type="button" class="btn btn-primary mr-2" data-toggle="modal" data-target="#bs-role-modal-xl">更新资料</button>
                                <button type="button" class="btn btn-primary mr-2" data-toggle="modal" data-target="#bs-role-modal-xl">分配权限</button>
                                <button type="button" class="btn btn-secondary mr-2" data-toggle="modal" data-target="#bs-role-modal-xl">删除权限</button></span></li></ul>
                </div>
            ),
            showExpandColumn: true,
            onlyOneExpanding: true,
            expandHeaderColumnRenderer: ({ isAnyExpands }) => {
                return isAnyExpands ? <i className='uil uil-lock-open-alt'></i> : <i className='uil uil-padlock'></i>;
            },
            expandColumnRenderer: ({ expanded }) => {
                return expanded ? <i className='uil uil-lock-open-alt'></i> : <i className='uil uil-padlock'></i>;
            },
        };

        return <React.Fragment>
            <Row className="page-title">
                <Col md={12}>
                    <PageTitle
                        breadCrumbItems={[
                            { label: 'Apps', path: '/apps/tasks/list' },
                            { label: 'Tasks', path: '/apps/tasks/list', active: true },
                        ]}
                        title={'品牌管理'}
                    />
                </Col>
            </Row>

            {/* filter panel */}
            <Row>
                <Col xl={12}>

                    <Card>
                        <CardBody>
                            <p class="sub-header">
                                工作部门管理可新建立权限组、用户组，并对权限组的菜单导航功能，模块管理功能权限进行设置之后，按照各个组将用户组分配到对应权限组.
                                工作部门管理分为核心管理员与普通组成员，核心管理成员拥有当前模块所有功能并可以分配组员，组员可以拥有各个级别的管理权限但是没有组员分配权限
                            </p>

                            <ToolkitProvider
                                bootstrap4
                                keyField="id"
                                data={records}
                                columns={columns}
                                search
                                exportCSV={{ onlyExportFiltered: true, exportAll: false }}>
                                {props => (
                                    <React.Fragment>
                                        <Row>
                                            <Col xl={2}>
                                                <SearchBar {...props.searchProps} />
                                            </Col>
                                            <Col xl={2} className="text-left">
                                                <ButtonGroup className="mr-1">
                                                    <Button id="archive" color="light">
                                                        <i className="uil uil-archive-alt"></i>
                                                    </Button>
                                                    <UncontrolledTooltip placement="top" target="archive">Archived</UncontrolledTooltip>
                                                    <Button id="spam" color="light">
                                                        <i className="uil uil-exclamation-octagon"></i>
                                                    </Button>
                                                    <UncontrolledTooltip placement="top" target="spam">Mark as spam</UncontrolledTooltip>
                                                    <Button id="delete" color="light">
                                                        <i className="uil uil-trash-alt"></i>
                                                    </Button>
                                                    <UncontrolledTooltip placement="top" target="delete">Delete</UncontrolledTooltip>
                                                </ButtonGroup>
                                            </Col>
                                            <Col xl={8} className="text-right">
                                                <div class="btn-group mb-2">
                                                    <ExportCSVButton {...props.csvProps} className="btn btn-primary">
                                                        导出 CSV
                                                    </ExportCSVButton >
                                                    <Button className="btn btn-primary btn btn-secondary">
                                                        导入
                                                    </Button>
                                                    <Button className="btn btn-primary btn btn-secondary">
                                                        打印
                                                    </Button>
                                                </div>
                                            </Col>
                                        </Row>

                                        <BootstrapTable
                                            {...props.baseProps}
                                            bordered={false}
                                            defaultSorted={defaultSorted}
                                            pagination={paginationFactory({ sizePerPage: 5, sizePerPageRenderer: sizePerPageRenderer, sizePerPageList: [{ text: '5', value: 5, }, { text: '10', value: 10 }, { text: '25', value: 25 }, { text: 'All', value: records.length }] })}
                                            expandRow={expandRow}
                                            selectRow={selectRow}
                                            wrapperClasses="table-responsive"
                                        />
                                    </React.Fragment>
                                )}
                            </ToolkitProvider>

                        </CardBody>
                    </Card>

                </Col>
            </Row>
        </React.Fragment>
    }
}


export default Branditems;